(window.webpackJsonp=window.webpackJsonp||[]).push([[207],{346:function(t,e,n){"use strict";n.r(e);var r=n(0),s=Object(r.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"xss-csrf"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#xss-csrf","aria-hidden":"true"}},[t._v("#")]),t._v(" XSS CSRF")]),t._v(" "),n("p",[t._v("XSS(跨站脚本攻击)，恶意的注入 html 代码，其他用户访问时，会被执行\n特点：能注入恶意的 HTML/JavaScript 代码到用户浏览的网页上，从而达到 Cookie 资料窃取、会话劫持、钓鱼欺骗等攻击\n防御手段：")]),t._v(" "),n("ul",[n("li",[t._v("浏览器禁止页面的 JS 访问带有 HttpOnly 属性的 Cookie")]),t._v(" "),n("li",[t._v("两端进行输入格式检查")]),t._v(" "),n("li",[t._v("通过编码转义的方式进行输出检查 CSRF(攻击跨站请求伪造) 特点：重要操作的所有参数都是可以被攻击者猜测到的。攻击者预测出 URL 的所有参数与参数值，才能成功地构造一个伪造的请求。\n防御手段：")]),t._v(" "),n("li",[t._v("token 验证机制，比如请求数据字段中添加一个 token，响应请求时校验其有效性")]),t._v(" "),n("li",[t._v("用户操作限制，比如验证码（繁琐，用户体验差）")]),t._v(" "),n("li",[t._v("请求来源限制，比如限制 HTTP Referer 才能完成操作（防御效果相比较差）\n实践中常用第一种")])])])},[],!1,null,null,null);e.default=s.exports}}]);